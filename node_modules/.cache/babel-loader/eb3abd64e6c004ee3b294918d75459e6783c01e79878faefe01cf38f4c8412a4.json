{"ast":null,"code":"var _jsxFileName = \"C:\\\\Software Development\\\\FULL STACK\\\\FRONT END\\\\React\\\\ELITE DENTAL CLINIC (Front end)\\\\frontend\\\\src\\\\components\\\\PatientList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './PatientList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PatientList = () => {\n  _s();\n  const [patients, setPatients] = useState([]);\n  useEffect(() => {\n    const fetchPatients = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/patients');\n        setPatients(response.data);\n        console.log(response.data); // ✅ Move log here to see fetched data\n      } catch (error) {\n        console.error('Error fetching patients:', error);\n      }\n    };\n    fetchPatients();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"patient-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Patients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Serial\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Age\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Contact\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Chief Complaint\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Allergies\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Conditions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: patients.map(p => {\n            var _p$medicalHistory, _p$medicalHistory2;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: p.serialNumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: new Date(p.date).toISOString().split('T')[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: p.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: p.age\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: p.gender\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: p.contact\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: p.chiefComplaint\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: ((_p$medicalHistory = p.medicalHistory) === null || _p$medicalHistory === void 0 ? void 0 : _p$medicalHistory.allergies) || '-'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: ((_p$medicalHistory2 = p.medicalHistory) === null || _p$medicalHistory2 === void 0 ? void 0 : _p$medicalHistory2.conditions) || '-'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 17\n              }, this)]\n            }, p._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(PatientList, \"2mHPNi2MF+s8ms7PrTd3nXwgmV8=\");\n_c = PatientList;\nexport default PatientList;\nvar _c;\n$RefreshReg$(_c, \"PatientList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","PatientList","_s","patients","setPatients","fetchPatients","response","get","data","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","p","_p$medicalHistory","_p$medicalHistory2","serialNumber","Date","date","toISOString","split","name","age","gender","contact","chiefComplaint","medicalHistory","allergies","conditions","_id","_c","$RefreshReg$"],"sources":["C:/Software Development/FULL STACK/FRONT END/React/ELITE DENTAL CLINIC (Front end)/frontend/src/components/PatientList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './PatientList.css';\r\n\r\nconst PatientList = () => {\r\n  const [patients, setPatients] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchPatients = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/patients');\r\n        setPatients(response.data);\r\n        console.log(response.data); // ✅ Move log here to see fetched data\r\n      } catch (error) {\r\n        console.error('Error fetching patients:', error);\r\n      }\r\n    };\r\n\r\n    fetchPatients();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"patient-list\">\r\n      <h2>All Patients</h2>\r\n      <div className=\"table-wrapper\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Serial</th>\r\n              <th>Date</th>\r\n              <th>Name</th>\r\n              <th>Age</th>\r\n              <th>Gender</th>\r\n              <th>Contact</th>\r\n              <th>Chief Complaint</th>\r\n              <th>Allergies</th>\r\n              <th>Conditions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {patients.map((p) => (\r\n              <tr key={p._id}>\r\n                <td>{p.serialNumber}</td>\r\n                <td>{new Date(p.date).toISOString().split('T')[0]}</td>\r\n                <td>{p.name}</td>\r\n                <td>{p.age}</td>\r\n                <td>{p.gender}</td>\r\n                <td>{p.contact}</td>\r\n                <td>{p.chiefComplaint}</td>\r\n                <td>{p.medicalHistory?.allergies || '-'}</td>\r\n                <td>{p.medicalHistory?.conditions || '-'}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}