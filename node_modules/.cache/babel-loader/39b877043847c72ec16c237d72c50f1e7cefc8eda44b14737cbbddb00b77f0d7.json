{"ast":null,"code":"var _jsxFileName = \"C:\\\\Software Development\\\\FULL STACK\\\\FRONT END\\\\React\\\\ELITE DENTAL CLINIC (Front end)\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Header from './components/Header';\nimport PatientList from './components/PatientList';\nimport PatientForm from './components/PatientForm';\nimport Modal from './components/Modal';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isFormOpen, setIsFormOpen] = useState(false);\n  const [refresh, setRefresh] = useState(false); // for reloading list\n\n  const handleFormSubmit = () => {\n    setIsFormOpen(false);\n    setRefresh(!refresh); // trigger list reload\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'right',\n        marginTop: '10px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsFormOpen(true),\n        className: \"add-btn\",\n        children: \"+ Add New Patient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PatientList, {\n      refresh: refresh\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isFormOpen,\n      onClose: () => setIsFormOpen(false),\n      children: /*#__PURE__*/_jsxDEV(PatientForm, {\n        onSuccess: handleFormSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RYe2lIxcYeYNmpxTr6kBSC8G+e8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Header","PatientList","PatientForm","Modal","jsxDEV","_jsxDEV","App","_s","isFormOpen","setIsFormOpen","refresh","setRefresh","handleFormSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","marginTop","onClick","isOpen","onClose","onSuccess","_c","$RefreshReg$"],"sources":["C:/Software Development/FULL STACK/FRONT END/React/ELITE DENTAL CLINIC (Front end)/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Header from './components/Header';\nimport PatientList from './components/PatientList';\nimport PatientForm from './components/PatientForm';\nimport Modal from './components/Modal';\nimport './App.css';\n\nfunction App() {\n  const [isFormOpen, setIsFormOpen] = useState(false);\n  const [refresh, setRefresh] = useState(false); // for reloading list\n\n  const handleFormSubmit = () => {\n    setIsFormOpen(false);\n    setRefresh(!refresh); // trigger list reload\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <div style={{ textAlign: 'right', marginTop: '10px' }}>\n        <button onClick={() => setIsFormOpen(true)} className=\"add-btn\">\n          + Add New Patient\n        </button>\n      </div>\n\n      <PatientList refresh={refresh} />\n      <Modal isOpen={isFormOpen} onClose={() => setIsFormOpen(false)}>\n        <PatientForm onSuccess={handleFormSubmit} />\n      </Modal>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE/C,MAAMa,gBAAgB,GAAGA,CAAA,KAAM;IAC7BH,aAAa,CAAC,KAAK,CAAC;IACpBE,UAAU,CAAC,CAACD,OAAO,CAAC,CAAC,CAAC;EACxB,CAAC;EAED,oBACEL,OAAA;IAAKQ,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBT,OAAA,CAACL,MAAM;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVb,OAAA;MAAKc,KAAK,EAAE;QAAEC,SAAS,EAAE,OAAO;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAAP,QAAA,eACpDT,OAAA;QAAQiB,OAAO,EAAEA,CAAA,KAAMb,aAAa,CAAC,IAAI,CAAE;QAACI,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAC;MAEhE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAENb,OAAA,CAACJ,WAAW;MAACS,OAAO,EAAEA;IAAQ;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjCb,OAAA,CAACF,KAAK;MAACoB,MAAM,EAAEf,UAAW;MAACgB,OAAO,EAAEA,CAAA,KAAMf,aAAa,CAAC,KAAK,CAAE;MAAAK,QAAA,eAC7DT,OAAA,CAACH,WAAW;QAACuB,SAAS,EAAEb;MAAiB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACX,EAAA,CAxBQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AA0BZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}