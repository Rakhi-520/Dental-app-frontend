{"ast":null,"code":"var _jsxFileName = \"C:\\\\Software Development\\\\FULL STACK\\\\FRONT END\\\\React\\\\ELITE DENTAL CLINIC (Front end)\\\\frontend\\\\src\\\\Pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useUserRole } from '../context/UserRoleContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [password, setPassword] = useState('');\n  const [selectedRole, setSelectedRole] = useState('assistant');\n  const {\n    setRole\n  } = useUserRole();\n  const navigate = useNavigate();\n  const handleLogin = () => {\n    if (selectedRole === 'admin') {\n      if (password === 'admin123') {\n        // make this configurable\n        setRole('admin');\n        navigate('/home');\n      } else {\n        alert('Incorrect admin password');\n      }\n    } else {\n      setRole(selectedRole);\n      navigate('/home');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select Role\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setSelectedRole(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"admin\",\n        children: \"Administrator (Doctor)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"assistant\",\n        children: \"Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"lab\",\n        children: \"Lab Worker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"nurse\",\n        children: \"Dental Nurse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"receptionist\",\n        children: \"Receptionist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"others\",\n        children: \"Others\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), selectedRole === 'admin' && /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Enter Admin Password\",\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"ivOjUz8nlbIc0rVIzw+LQeV++AY=\", false, function () {\n  return [useUserRole, useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","useUserRole","jsxDEV","_jsxDEV","LoginPage","_s","password","setPassword","selectedRole","setSelectedRole","setRole","navigate","handleLogin","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Software Development/FULL STACK/FRONT END/React/ELITE DENTAL CLINIC (Front end)/frontend/src/Pages/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useUserRole } from '../context/UserRoleContext';\r\n\r\nconst LoginPage = () => {\r\n  const [password, setPassword] = useState('');\r\n  const [selectedRole, setSelectedRole] = useState('assistant');\r\n  const { setRole } = useUserRole();\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = () => {\r\n    if (selectedRole === 'admin') {\r\n      if (password === 'admin123') { // make this configurable\r\n        setRole('admin');\r\n        navigate('/home');\r\n      } else {\r\n        alert('Incorrect admin password');\r\n      }\r\n    } else {\r\n      setRole(selectedRole);\r\n      navigate('/home');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Select Role</h2>\r\n      <select onChange={(e) => setSelectedRole(e.target.value)}>\r\n        <option value=\"admin\">Administrator (Doctor)</option>\r\n        <option value=\"assistant\">Assistant</option>\r\n        <option value=\"lab\">Lab Worker</option>\r\n        <option value=\"nurse\">Dental Nurse</option>\r\n        <option value=\"receptionist\">Receptionist</option>\r\n        <option value=\"others\">Others</option>\r\n      </select>\r\n\r\n      {selectedRole === 'admin' && (\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Enter Admin Password\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n      )}\r\n\r\n      <button onClick={handleLogin}>Login</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}